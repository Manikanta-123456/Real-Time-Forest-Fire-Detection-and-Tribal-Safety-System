#define BLYNK_TEMPLATE_ID "TMPL3851HezbR"
#define BLYNK_TEMPLATE_NAME "ANIMAL AND FIRE DETECTION"
#define BLYNK_AUTH_TOKEN "pL3kxce8fuDUwlfbL3HDVOP1hSQYb-U7"

#define BLYNK_PRINT Serial
#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "BLIND";
char pass[] = "12345678";

#include <LiquidCrystal.h>
LiquidCrystal lcd(23, 22, 21, 19, 18, 15);

//dht pins
#include "DHT.h"
#define DHTPIN 4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);


//sensor pins
#define flame 13
#define pir 5

//motor pins
#define in1 14
#define in2 27

//buzzer p[ins
#define buzzer 12

void setup() {
 
  Blynk.begin(auth, ssid, pass);
  lcd.begin(16, 2);
  lcd.setCursor(0,0);      //1 ST ROW O COLUMN
  lcd.print(" WELCOME TO ");
  lcd.setCursor(0,1);
  lcd.print("IOT PROJECT");
  delay(5000);
  lcd.clear();
  lcd.setCursor(0,0);      //1 ST ROW O COLUMN
  lcd.print("ANIMAL AND FIRE");
  lcd.setCursor(0,1);
  lcd.print(" DETECTION..");
  delay(5000);
  lcd.clear();
  
  Serial.begin(115200);
  dht.begin();
  pinMode(in1,OUTPUT);
  pinMode(in2,OUTPUT);
  
  pinMode(flame,INPUT);  
  pinMode(pir,INPUT);  

  pinMode(buzzer,OUTPUT);

  
}

void loop() {
 
 Blynk.run();

  int P=digitalRead(pir);
  int F=digitalRead(flame);
  float h = dht.readHumidity();
  float t = dht.readTemperature();
 

   // Print acceleration data
  Serial.print("Pir Status = ");
  Serial.print(P);
  Serial.print(" ||  ");
  Serial.print("Flame Status = "); 
  Serial.print(F); 
  Serial.print(" ||  ");
  Serial.print(F("Temperature: "));
  Serial.print(t);                  // temperature
  Serial.print(" || ");
  Serial.print(F("Humidity: "));     //humidity
  Serial.println(h);

  lcd.setCursor(0,0);      //1 ST ROW O COLUMN
  lcd.print("H= ");
  lcd.setCursor(4,0);
  lcd.print(h);
  lcd.setCursor(0,1);      //1 ST ROW O COLUMN
  lcd.print("T= ");
  lcd.setCursor(4,1);
  lcd.print(t);
  delay(500);

   Blynk.virtualWrite(V0,h);
   Blynk.virtualWrite(V1,t);
   Blynk.virtualWrite(V2,F);
  lcd.clear();
  
  if (h > 70)
  {
   
    Blynk.logEvent("alert", "Humidity Level Is Too High In Forest..");
    alert();
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print(" HIGH HUMID ");
    lcd.setCursor(0,1);
    lcd.print("IN FOREST..");
    delay(2000);
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print(" HIGH TEMP ");
    lcd.setCursor(0,1);
    lcd.print("IN FOREST..");
    delay(2000);
    lcd.clear();
    
  }

  else if(F==0)
  {
    Blynk.logEvent("alert", "Fire Occured In the Forest..Be Save a Trees And Medicinal Plants..");
    alert();
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print("FIRE OCCURED ");
    lcd.setCursor(0,1);
    lcd.print("IN FOREST..");
    delay(2000);
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print(" SAVE A TRESS ");
    lcd.setCursor(0,1);
    lcd.print("IN FOREST..");
    delay(2000);
    lcd.clear();
    motor();
    delay(3000);
    motor_off();
  }
  else if(P==1)
  {
    Blynk.logEvent("alert", "Animal Movement Occured In the forests..Be Safest AT this Place..!");
    alert();
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print("ANIMAL MOVEMENT");
    lcd.setCursor(0,1);
    lcd.print("IN FOREST..");
    delay(2000);
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print(" BE A SAFEST ");
    lcd.setCursor(0,1);
    lcd.print("IN THIS PLACE");
    delay(2000);
    lcd.clear();
  }
  else if (t > 40)
  {
    
    Blynk.logEvent("alert", "Temperature Is Too High In forest..:");
    alert();
    lcd.clear();
    lcd.setCursor(0,0);      //1 ST ROW O COLUMN
    lcd.print(" HIGH TEMP ");
    lcd.setCursor(0,1);
    lcd.print("IN FOREST..");
    delay(2000);
    lcd.clear();
    Serial.println("TEMPERATURE is High:");
    motor();
    delay(5000);
    motor_off();
  }
    
}
void alert()
{
  digitalWrite(buzzer,1);
  delay(1000);
  digitalWrite(buzzer,0);
  delay(100);
  digitalWrite(buzzer,1);
  delay(1000);
  digitalWrite(buzzer,0);
  delay(100);
  
}
void motor()
{
  analogWrite(in1,80);
  analogWrite(in2,0);
}
void motor_off()
{
  analogWrite(in1,0);
  analogWrite(in2,0);
}
